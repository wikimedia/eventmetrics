# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Model,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    AppBundle\EventSubscriber\UserSubscriber:
        tags:
            - { name: doctrine.event_listener, event: postLoad }
            - { name: doctrine.event_listener, event: prePersist }

    AppBundle\EventSubscriber\CategorySubscriber:
        tags:
            - { name: doctrine.event_listener, event: postLoad }
            - { name: doctrine.event_listener, event: prePersist }

    AppBundle\EventSubscriber\ProgramSubscriber:
        tags:
            - { name: doctrine.event_listener, event: postLoad }

    AppBundle\EventSubscriber\ExceptionSubscriber:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }
        arguments: ['@templating', '@logger', '%kernel.environment%']

    AppBundle\Repository\:
        resource: '../../src/AppBundle/Repository/*'
        arguments: ['@doctrine.orm.entity_manager']
        calls:
        - [setContainer, ["@service_container"]]
        - [setLogger, ['@logger']]
        - [setCachePool, ["@cache.app"]]

    AppBundle\Service\EventProcessor:
        public: true

    AppBundle\Service\JobHandler:
        public: true

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
