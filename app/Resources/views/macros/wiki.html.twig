{% macro extLink(url, label, overrideLabel) %}{% spaceless %}
    {% if overrideLabel is not empty %}
        {% set label = overrideLabel %}
    {% endif %}
    <a href='{{ url }}' target='_blank'>{{ label|raw }}</a>
    {% endspaceless %}
{% endmacro %}

{% macro pageLink(pageTitle, domain, label = null, wikitext = false) %}{% spaceless %}
    {% from _self import extLink as extLink %}
    {% if wikitext %}
        {% if label is empty %}
            {% set label = pageTitle %}
        {% endif %}
        [{{ 'https://' ~ domain ~ '.org/wiki/' ~ pageTitle|wiki_encode }} {{ label|replace({'_': ' '}) }}]
    {% else %}
        {{ extLink('https://' ~ domain ~ '.org/wiki/' ~ pageTitle|wiki_encode, pageTitle|replace({'_': ' '}), label) }}
    {% endif %}
{% endspaceless %}{% endmacro %}

{##
 # Given a revision, or a page title and namespace,
 # generate the path including the namespace.
 # TODO: programatically get namespace from meta API.
 #}
{% macro pagePath(rev, ns = null) %}{% spaceless %}
    {% if rev is not iterable %}
        {% set rev = {page: rev, namespace: ns} %}
    {% endif %}
    {{ ((rev.namespace == 6 ? 'File:' : '') ~ rev.page|replace({' ': '_'}))|raw }}
{% endspaceless %}{% endmacro %}
